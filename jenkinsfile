pipeline {
    agent any
    environment {
      PATH = "${PATH}:${getTerraformPath()}"
    }
    stages {
       //stage('Create S3 Bucket1'){
         //   steps{
              // ## sh 'ansible-playbook s3-create.yaml'
           // }
        //}
        stage('Terraform-Init & apply - dev1') {
            steps {
                sh returnStatus: true, script: 'terraform workspace new dev1'
                sh 'terraform init'
                sh 'terraform apply --auto-approve'
            }
        }
        stage('Terraform-Init & apply - prod1') {
            steps {
                sh returnStatus: true, script: 'terraform workspace new prod'
                sh 'terraform init'
                sh 'terraform apply --auto-approve'
            }
        }
    }
}

def getTerraformPath(){
    def tfHome = tool name: 'terraform-server', type: 'terraform'
    return tfHome
}

/*
def createS3bucket(bucketName){
    sh returnStatus: true, script: "aws s3 mb ${bucketName} --region ap-south-1"
}
*/
